#!/bin/bash -e

# Environment Variables
CONFPATH="$(dirname $0)/conf"
PATH="$(dirname $0)/lib:${PATH}"
DEBIAN_FRONTEND="noninteractive"
mkdir -p "${TMPPATH:="$(mktempdir)"}"

# Aliases
alias rsync="command rsync --exclude-from \"${CONFPATH}/rsync.exclusions\" -abviuzP"
alias install="apt-get --no-install-recommends --no-install-suggests --force-yes install"
# @NOTE A dist-upgrade is nonsafe as it could break other environments.
alias upgrade="apt-get --no-install-recommends --no-install-suggests --force-yes upgrade"
alias update="apt-get update"

# Cleanup the installer
#function cleanup() { rm -Rf "$TMPPATH"; }
alias cleanup="rm -Rf \"${TMPPATH}\""
trap "cleanup" EXIT SIGQUIT SIGKILL

#######################
# Step A - Check Root #
#######################
if [[ "$(id -u)" -gt 0 ]]; then
   echo "This install script must be run as root" 1>&2
   exit 1
fi

####################
# Step B - Welcome #
####################
if ! whiptail --backtitle "BunsenLabs" \
	--title "BunsenLabs Install" \
	--yesno "Welcome to Bunsen Labs Linux installation!\n(WARNING THIS IS STILL UNDERGOING TESTING)" 8 65 \
	--yes-button "Start Installation" \
	--no-button "Cancel"; then
  clear
	exit 1
fi

clear

#######################
# Step C - Update apt #
#######################
if ! update; then
	whiptail --backtitle "BunsenLabs" \
		--title "Install Failed" \
		--msgbox "Could not update the apt repositories. Please check to ensure your repositories are setup correctly." 8 65 \
		--ok-button "Exit"
    clear
		exit 1
fi

clear

###################################################
# Step 1 - Installation Dependencies              #
# Let's promote transparency of actions shall we? #
# => See install() for details.                   #
###################################################
if ! whiptail --backtitle "BunsenLabs" \
	--title "Install Dependencies" \
	--yesno "In order to install we need to ensure rsync and curl are available.\nMay we install Rsync, Curl and any other required dependencies with:\n\`apt-get install --no-install-recommends --no-install-suggests --force-yes rsync curl bc\`" 9 65 \
	--yes-button "Install" \
	--no-button "Exit Installation"; then
	clear
	exit 1
fi

xargs < "${CONFPATH}/dependencies.debs" install

clear

###########################################
# Step 2 - Bunsel Configurations Download #
###########################################
xargs -n1 < "${CONFPATH}/bunsen.repos" githubtar -r

clear

###########################################
# Step 3 - Place BunsenLabs configuration #
###########################################
# @TODO Move the destinations to the repositories
# 			I'm assuming eventually a level of Deb support
# 			Other using Git wholely in which case another
# 			Package manager
clear
echo "Moving system files..."
sleep 2

# @TODO Consider why we are deleting the /etc/skel directory.
#       If I'm installing BunsenLabs as an alternative user environment
#       This is extremely counter intuitive.
#rm -r /etc/skel
#mkdir /etc/skel

# removes default debian default home directory install and makes space for config files
rsync "${TMPPATH}/repos/bunsen-installscripts/systemfiles/." "/"
#copies some system files
rsync "${TMPPATH}/repos/bunsen1-dark-theme-master" "/usr/share/themes"
rsync "${TMPPATH}/repos/deb8-theme-master" "/usr/share/themes"
rsync "${TMPPATH}/repos/bunsen1-theme-master/Bunsen1" "/usr/share/themes"
#copies over themes
rsync "${TMPPATH}/repos/bunsen-configs-master/." "/etc/skel"
# copies config files
mkdir /etc/skel/conky-BL
rsync "${TMPPATH}/repos/bunsen-conky-master/." "/etc/skel/conky-BL"
# conky installation
rsync "${TMPPATH}/repos/bunsen-docs-master/." "/usr/share/doc"
# installs docs
rsync "${TMPPATH}/repos/bunsen-pipemenus-master/." "/usr/bin"
# installs pipemenus
rsync "${TMPPATH}/repos/bunsen-exit-master/." "/usr/bin"
# installs bl-exit
mkdir /usr/share/backgrounds
rsync "${TMPPATH}/repos/bunsen1-theme-master/Wallpapers/." "/usr/share/backgrounds"
rsync "${TMPPATH}/repos/bunsen-images-master/." "/usr/share/backgrounds"
# installs wallpaper set
rsync "${TMPPATH}/repos/bunsen-wmhacks-master/." "/usr/bin"
# installs wm hacks
rsync "${TMPPATH}/repos/bunsen-lock-master/." "/usr/bin"
# installs bunsen-lock
mkdir /usr/lib/bunsen/bunsen-common
rsync "${TMPPATH}/repos/bunsen-common-master/." "/usr/lib/bunsen/bunsen-common"
clear

echo "Updating debian..."
sleep 2

sudo apt-get --force-yes update
yes | sudo apt-get --force-yes --no-install-recommends dist-upgrade
sudo apt-get --force-yes autoremove

echo "Installing packages..."
sleep 2

# package list is mainly taken from John Raff's "Crunchbang Wally" http://crunchbang.org/forums/viewtopic.php?id=38994
grep -E '^[^#]{1}' < packages.txt | apt-get --no-install-recommends --ignore-missing --force-yes install
sudo apt-get --force-yes autoremove
sudo apt-get --force-yes update
sudo apt-get --force-yes --no-install-recommends upgrade

clear

echo "Fix gksu"
sleep 5
sudo update-alternatives --set libgksu-gconf-defaults /usr/share/libgksu/debian/gconf-defaults.libgksu-sudo
# make sure gksu runs in sudo mode
sudo update-gconf-defaults
clear

#echo "Installing config files to Home directory"
#echo "Please enter your username:"
#read USER
#export USER
#install john raff script
#rsync --exclude-from "${CONFPATH}/rsync.exclusions" \
  -abviuzP ${TMPPATH}/repos/bunsen-user-setup-master/bl-user-setup /home/$USER/.config/bunsen/bl-setup

####### John Raff bl-user-setup script
# BunsenLabs User Set-up

# USER="$1" USER is exported by lightdm
#rsync --exclude-from "${CONFPATH}/rsync.exclusions" -abviuzP /etc/skel/. /home/$USER

#[ -f "/home/$USER/.gtk-bookmarks" ] && {
#    rpl -q 'REPLACEME' $USER /home/$USER/.gtk-bookmarks > /dev/null 2>&1
#}

#ln -s /usr/share/backgrounds /home/$USER/images/wallpapers/shared

#mkdir -p /home/$USER/.config/bunsen # this should already exist
#touch /home/$USER/.config/bunsen/bl-setup
#chown -R $USER:$USER /home/$USER
###########

echo "Updating grub"
sleep 5
sudo update-grub
clear

echo "Updating lightdm configuration"
#cd /etc/lightdm
#sudo mv lightdm.conf lightdm.conf-orig
#sed 's|^# *session-setup-script= *$|session-setup-script=/usr/share/tinkerbox/tb-user-setup|' lightdm.conf-orig | sudo tee lightdm.conf >/dev/null
#cd

echo "Thank you for installing Bunsen Labs Linux"
read -p "Press [Enter] key to reboot..."
echo "The system will now reboot"
sleep 5
sudo reboot

exit 0
